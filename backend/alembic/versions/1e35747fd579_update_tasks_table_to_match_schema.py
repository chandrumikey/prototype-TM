"""Update tasks table to match schema

Revision ID: 1e35747fd579
Revises: 94e91c3fa6a7
Create Date: 2025-09-13 10:20:24.319734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

priority_enum = sa.Enum('low', 'medium', 'high', name='priorityenum')
priority_enum.create(op.get_bind(), checkfirst=True)

# revision identifiers, used by Alembic.
revision: str = '1e35747fd579'
down_revision: Union[str, Sequence[str], None] = '94e91c3fa6a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tasks', 'title',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('tasks', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('tasks', 'due_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('tasks', 'priority',
               existing_type=sa.INTEGER(),
               type_=sa.Enum('low', 'medium', 'high', name='priorityenum'),
               existing_nullable=True)
    op.drop_constraint(op.f('tasks_owner_id_fkey'), 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key(op.f('tasks_owner_id_fkey'), 'tasks', 'users', ['owner_id'], ['id'])
    op.alter_column('tasks', 'priority',
               existing_type=sa.Enum('low', 'medium', 'high', name='priorityenum'),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('tasks', 'due_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('tasks', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('tasks', 'title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    # ### end Alembic commands ###
    # alter the column with USING clause
op.execute("""
    ALTER TABLE tasks
    ALTER COLUMN priority
    TYPE priorityenum
    USING
        CASE
            WHEN priority = 0 THEN 'low'::priorityenum
            WHEN priority = 1 THEN 'medium'::priorityenum
            WHEN priority = 2 THEN 'high'::priorityenum
            ELSE 'medium'::priorityenum
        END
""")
